1. list是有序的，dict是无序的

2. list通过索引访问，dict使用key访问

3. list随着数量的正常增长要想查找元素的时间复杂度为O(n), dict不随数量而增长而变化，时间复杂度都为O(1)

4. dict的占用内存稍比list大，会在1.5倍左右


特征决定用途：

list一般可作为队列、堆栈使用，而dict一般作为聚合统计或者快速使用特征访问等

从应用场景来说:


list 是记录简单有序数据的,就是一对一的那种,可以理解为一维数组.

比如你记录猫的名字,就可以用list = ['第1只猫名字','第2只猫名字'] ...

比如你记录饭店的菜品,就可以用list = ['第1个菜红烧肉','第2个菜红烧大肠',第3个菜'红烧排骨'] ...

这里的记录,是多条记录重复的,需要按一定顺序来记录.

list 也可以有嵌套,嵌套里面的list仍然可以理解为一维数组

比如常见的季度与月份的关系 list = [[1,2,3],[4,5,6],[7,8,9],[10,11,12]]

又或者你从excel读取一行数据,存到list中,也需要用到list嵌套

又或者你从SQL读取一行数据,存到list中,也会用的list嵌套.

这里的记录,是多条按一定顺序存放的,仍然需要按一定顺序来读取存放.


上面是我理解的list,有序的应用场景.


dict 是记录复杂无序数据,就是一对多,可以理解为多维数组.

比如你记录一次野餐朋友带的食物数量, 
dict = {'小明':{'红烧肉':6,'大闸蟹':8,'水煮鱼':1},'小花':{'黄瓜':9,'番茄':2},'小六子':{'啤酒':30,'可乐':40}}

dict可以嵌套list,把无序的数据调整为有序的数据,可以简单地理解为,一对多个一维数组,本质上还是多维数组.

比如你要记录同学们有多少个女朋友,

比如你要记录一次会议参加的人员的基本信息,大家的信息都不一样时,也是无序随机事件:



